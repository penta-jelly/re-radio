type SongExplorer {
  id: String!
  snippet: Snippet!
  contentDetails: ContentDetail!
}

type MiniSongExplorer {
  id: String!
  snippet: Snippet!
}

type Snippet {
  publishedAt: DateTime!
  channelId: String!
  title: String!
  description: String!
  thumbnails: Thumbnails!
  channelTitle: String!
  tags: [String!]!
  categoryId: String!
  defaultAudioLanguage: String
  liveBroadcastContent: String
}

type MiniSnippet {
  publishedAt: DateTime!
  channelId: String!
  title: String!
  description: String!
  thumbnails: Thumbnails!
  channelTitle: String!
}

type ContentDetail {
  duration: Int!
  dimension: String!
  definition: String!
  caption: String!
  licensedContent: Boolean!
}

type Thumbnails {
  default: Thumbnail!
  medium: Thumbnail
  high: Thumbnail
  standard: Thumbnail
  maxres: Thumbnail
}

type Thumbnail {
  url: String!
  width: Int!
  height: Int!
}

input SongExplorerInput {
  url: String
  videoId: String
}

input SongExplorersInput {
  q: String!
  maxResults: Int
  order: Order
}

enum Order { date, rating, relevance, title, viewCount, videoCount }

extend type Query {
  songExplorer(where: SongExplorerInput!): SongExplorer!
  songExplorers(where: SongExplorersInput!): [MiniSongExplorer!]!
}

